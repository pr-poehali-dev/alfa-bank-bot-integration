import { useState, useEffect } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

const API_URL = 'https://functions.poehali.dev/5c16926a-4625-421c-a828-127ea6ceccef';

interface UserData {
  id?: number;
  telegram_id: number;
  username?: string;
  first_name?: string;
  promo_code: string;
  balance: number;
}

interface StatsData {
  total_referrals: number;
  cards_issued: number;
}

interface Transaction {
  id: number;
  amount: number;
  type: string;
  description: string;
  created_at: string;
}

const Index = () => {
  const [user, setUser] = useState<UserData | null>(null);
  const [stats, setStats] = useState<StatsData>({ total_referrals: 0, cards_issued: 0 });
  const [transactions, setTransactions] = useState<Transaction[]>([]);
  const [loading, setLoading] = useState(true);
  const [copySuccess, setCopySuccess] = useState(false);
  const { toast } = useToast();

  const mockTelegramId = 111222333;

  useEffect(() => {
    initUser();
  }, []);

  const initUser = async () => {
    try {
      const registerResponse = await fetch(API_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          action: 'register',
          telegram_id: mockTelegramId,
          username: 'demo_user',
          first_name: '–î–µ–º–æ'
        })
      });

      if (!registerResponse.ok) throw new Error('Failed to register');
      
      const statsResponse = await fetch(`${API_URL}?telegram_id=${mockTelegramId}`);
      if (!statsResponse.ok) throw new Error('Failed to fetch stats');
      
      const data = await statsResponse.json();
      setUser(data.user);
      setStats(data.stats);
      setTransactions(data.transactions || []);
    } catch (error) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ',
        variant: 'destructive'
      });
    } finally {
      setLoading(false);
    }
  };

  const copyPromoCode = () => {
    if (user?.promo_code) {
      navigator.clipboard.writeText(user.promo_code);
      setCopySuccess(true);
      toast({
        title: '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!',
        description: '–ü—Ä–æ–º–æ–∫–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞'
      });
      setTimeout(() => setCopySuccess(false), 2000);
    }
  };

  const sharePromoCode = () => {
    const text = `üéÅ –û—Ñ–æ—Ä–º–∏ –∫–∞—Ä—Ç—É –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞ –ø–æ –º–æ–µ–º—É –ø—Ä–æ–º–æ–∫–æ–¥—É ${user?.promo_code} –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å—ã!`;
    const url = `https://t.me/share/url?url=${encodeURIComponent(window.location.href)}&text=${encodeURIComponent(text)}`;
    window.open(url, '_blank');
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-alfa-red via-red-600 to-red-700 flex items-center justify-center">
        <div className="animate-spin rounded-full h-16 w-16 border-t-4 border-white"></div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-alfa-red via-red-600 to-red-700 pb-6">
      <div className="container max-w-2xl mx-auto px-4 py-6">
        <div className="mb-6 text-center">
          <h1 className="text-3xl font-bold text-white mb-2 flex items-center justify-center gap-2">
            <Icon name="CreditCard" size={32} className="text-white" />
            –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫
          </h1>
          <p className="text-white/90 text-sm">–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</p>
        </div>

        <Tabs defaultValue="home" className="w-full">
          <TabsList className="grid w-full grid-cols-3 mb-6 bg-white/10 backdrop-blur-sm">
            <TabsTrigger value="home" className="data-[state=active]:bg-white data-[state=active]:text-alfa-red">
              <Icon name="Home" size={18} className="mr-2" />
              –ì–ª–∞–≤–Ω–∞—è
            </TabsTrigger>
            <TabsTrigger value="referrals" className="data-[state=active]:bg-white data-[state=active]:text-alfa-red">
              <Icon name="Users" size={18} className="mr-2" />
              –†–µ—Ñ–µ—Ä–∞–ª—ã
            </TabsTrigger>
            <TabsTrigger value="history" className="data-[state=active]:bg-white data-[state=active]:text-alfa-red">
              <Icon name="Receipt" size={18} className="mr-2" />
              –ò—Å—Ç–æ—Ä–∏—è
            </TabsTrigger>
          </TabsList>

          <TabsContent value="home" className="space-y-4">
            <Card className="bg-white p-6 shadow-xl">
              <div className="flex items-center justify-between mb-4">
                <div>
                  <p className="text-sm text-gray-500">–í–∞—à –±–∞–ª–∞–Ω—Å</p>
                  <p className="text-4xl font-bold text-alfa-red">{user?.balance.toFixed(2)} ‚ÇΩ</p>
                </div>
                <div className="bg-alfa-red/10 p-4 rounded-full">
                  <Icon name="Wallet" size={32} className="text-alfa-red" />
                </div>
              </div>
              <Button className="w-full bg-alfa-red hover:bg-red-700 text-white">
                <Icon name="Download" size={18} className="mr-2" />
                –í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞
              </Button>
            </Card>

            <Card className="bg-white p-6 shadow-xl">
              <h3 className="font-bold text-lg mb-3 flex items-center gap-2">
                <Icon name="Gift" size={20} className="text-alfa-red" />
                –í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥
              </h3>
              <div className="bg-gray-100 p-4 rounded-lg mb-4 flex items-center justify-between">
                <div>
                  <p className="text-xs text-gray-500 mb-1">–ü—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –¥—Ä—É–∑–µ–π</p>
                  <p className="text-2xl font-bold text-alfa-red tracking-wider">{user?.promo_code}</p>
                </div>
                <Button
                  onClick={copyPromoCode}
                  variant="outline"
                  size="icon"
                  className={`${copySuccess ? 'bg-green-100 border-green-500' : ''}`}
                >
                  <Icon name={copySuccess ? "Check" : "Copy"} size={18} />
                </Button>
              </div>
              <Button onClick={sharePromoCode} className="w-full bg-blue-500 hover:bg-blue-600 text-white">
                <Icon name="Share2" size={18} className="mr-2" />
                –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram
              </Button>
              <div className="mt-4 p-4 bg-blue-50 rounded-lg">
                <p className="text-sm text-gray-700">
                  üí∞ <strong>200‚ÇΩ</strong> –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ñ–æ—Ä–º–∏—Ç –∫–∞—Ä—Ç—É –ø–æ –≤–∞—à–µ–º—É –ø—Ä–æ–º–æ–∫–æ–¥—É
                </p>
              </div>
            </Card>

            <Card className="bg-white p-6 shadow-xl">
              <h3 className="font-bold text-lg mb-4">–û –∫–∞—Ä—Ç–µ</h3>
              <div className="space-y-3">
                <div className="flex items-start gap-3">
                  <Icon name="CreditCard" size={20} className="text-alfa-red mt-1" />
                  <div>
                    <p className="font-semibold">–ö—ç—à–±—ç–∫ –¥–æ 10%</p>
                    <p className="text-sm text-gray-600">–ù–∞ –≤—Å–µ –ø–æ–∫—É–ø–∫–∏</p>
                  </div>
                </div>
                <div className="flex items-start gap-3">
                  <Icon name="Shield" size={20} className="text-alfa-red mt-1" />
                  <div>
                    <p className="font-semibold">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ</p>
                    <p className="text-sm text-gray-600">–ü—Ä–∏ —É—Å–ª–æ–≤–∏—è—Ö</p>
                  </div>
                </div>
                <div className="flex items-start gap-3">
                  <Icon name="Zap" size={20} className="text-alfa-red mt-1" />
                  <div>
                    <p className="font-semibold">–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –≤—ã–ø—É—Å–∫</p>
                    <p className="text-sm text-gray-600">–û–Ω–ª–∞–π–Ω –∑–∞ 5 –º–∏–Ω—É—Ç</p>
                  </div>
                </div>
              </div>
            </Card>
          </TabsContent>

          <TabsContent value="referrals" className="space-y-4">
            <Card className="bg-white p-6 shadow-xl">
              <h3 className="font-bold text-lg mb-4 flex items-center gap-2">
                <Icon name="Users" size={20} className="text-alfa-red" />
                –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
              </h3>
              <div className="grid grid-cols-2 gap-4">
                <div className="bg-blue-50 p-4 rounded-lg text-center">
                  <p className="text-3xl font-bold text-alfa-red">{stats.total_referrals}</p>
                  <p className="text-sm text-gray-600 mt-1">–í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ</p>
                </div>
                <div className="bg-green-50 p-4 rounded-lg text-center">
                  <p className="text-3xl font-bold text-green-600">{stats.cards_issued}</p>
                  <p className="text-sm text-gray-600 mt-1">–ö–∞—Ä—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ</p>
                </div>
              </div>
              <div className="mt-4 p-4 bg-yellow-50 rounded-lg">
                <p className="text-sm text-gray-700">
                  <Icon name="TrendingUp" size={16} className="inline mr-1" />
                  –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥: <strong>{stats.total_referrals * 200}‚ÇΩ</strong>
                </p>
                <p className="text-xs text-gray-500 mt-1">
                  –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: <strong>{stats.cards_issued * 200}‚ÇΩ</strong>
                </p>
              </div>
            </Card>

            <Card className="bg-white p-6 shadow-xl">
              <h3 className="font-bold text-lg mb-3">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</h3>
              <div className="space-y-4">
                <div className="flex gap-3">
                  <div className="bg-alfa-red text-white rounded-full w-8 h-8 flex items-center justify-center font-bold flex-shrink-0">1</div>
                  <div>
                    <p className="font-semibold">–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º</p>
                    <p className="text-sm text-gray-600">–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–∑—å—è–º –≤ Telegram</p>
                  </div>
                </div>
                <div className="flex gap-3">
                  <div className="bg-alfa-red text-white rounded-full w-8 h-8 flex items-center justify-center font-bold flex-shrink-0">2</div>
                  <div>
                    <p className="font-semibold">–î—Ä—É–≥ –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –∫–∞—Ä—Ç—É</p>
                    <p className="text-sm text-gray-600">–ü–æ –≤–∞—à–µ–º—É –ø—Ä–æ–º–æ–∫–æ–¥—É</p>
                  </div>
                </div>
                <div className="flex gap-3">
                  <div className="bg-alfa-red text-white rounded-full w-8 h-8 flex items-center justify-center font-bold flex-shrink-0">3</div>
                  <div>
                    <p className="font-semibold">–ü–æ–ª—É—á–∞–µ—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ</p>
                    <p className="text-sm text-gray-600">200‚ÇΩ –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å</p>
                  </div>
                </div>
              </div>
            </Card>
          </TabsContent>

          <TabsContent value="history" className="space-y-4">
            <Card className="bg-white p-6 shadow-xl">
              <h3 className="font-bold text-lg mb-4 flex items-center gap-2">
                <Icon name="Receipt" size={20} className="text-alfa-red" />
                –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π
              </h3>
              {transactions.length === 0 ? (
                <div className="text-center py-8">
                  <Icon name="Inbox" size={48} className="mx-auto text-gray-300 mb-3" />
                  <p className="text-gray-500">–ü–æ–∫–∞ –Ω–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π</p>
                  <p className="text-sm text-gray-400 mt-1">–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π</p>
                </div>
              ) : (
                <div className="space-y-3">
                  {transactions.map((tx) => (
                    <div key={tx.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div className="flex items-center gap-3">
                        <div className="bg-green-100 p-2 rounded-full">
                          <Icon name="Plus" size={16} className="text-green-600" />
                        </div>
                        <div>
                          <p className="font-semibold text-sm">{tx.description}</p>
                          <p className="text-xs text-gray-500">{new Date(tx.created_at).toLocaleDateString('ru-RU')}</p>
                        </div>
                      </div>
                      <p className="font-bold text-green-600">+{tx.amount}‚ÇΩ</p>
                    </div>
                  ))}
                </div>
              )}
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default Index;
